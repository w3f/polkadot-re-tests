name: Integration Testsuite

on:
  push:
    paths:
    - '.github/workflows/integration.yml'
    - 'test/**'
    - '!test/fixtures/**'
    - 'test/fixtures/genesis/**'
    - '!test/adapters/**'
    - '!test/README.md'
  pull_request:
    paths:
    - '.github/workflows/integration.yml'
    - 'test/**'
    - '!test/fixtures/**'
    - 'test/fixtures/genesis/**'
    - '!test/adapters/**'
    - '!test/README.md'

jobs:
  build-substrate:
    name: "[build] substrate"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout substrate
      uses: actions/checkout@v2
      with:
        repository: paritytech/polkadot
        ref: v0.7.33
    - name: Setup rust toolchain
      id: rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-04-15
        target: wasm32-unknown-unknown
        default: true
        profile: minimal
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: cargo-registry-implementation-substrate-${{ hashFiles('Cargo.lock') }}
        restore-keys: cargo-registry-implementation-substrate-
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: cargo-index-implementation-substrate-${{ hashFiles('Cargo.lock') }}
        restore-keys: cargo-index-implementation-substrate-
    - name: Cache cargo build output
      uses: actions/cache@v1
      with:
        path: target
        key: cargo-build-implementation-substrate-${{ steps.rustup.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: cargo-build-implementation-substrate-${{ steps.rustup.outputs.rustc_hash }}-
    - name: Build substrate
      run: cargo build --release
    - name: Upload substrate
      uses: actions/upload-artifact@v1
      with:
        name: substrate
        path: target/release/polkadot

  build-kagome:
    name: "[build] kagome"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout kagome
      uses: actions/checkout@v2
      with:
        repository: soramitsu/kagome
        ref: 988bc6d93314ca58b320a9d83dcbc4cd3b87b7bb
    - name: Cache hunter outputs
      uses: actions/cache@v1
      with:
        path: ~/.hunter
        key: hunter-implementation-kagome-${{ hashFiles('CMakeLists.txt') }}
        restore-keys: hunter-implementation-kagome-
    - name: Build kagome
      env:
        CC: gcc-9
        CXX: g++-9
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release -B build -S .
        cmake --build build
    - name: Upload kagome
      uses: actions/upload-artifact@v1
      with:
        name: kagome
        path: build/node/kagome_full/kagome_full

  build-gossamer:
    name: "[build] gossamer"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout gossamer
      uses: actions/checkout@v2
      with:
        repository: ChainSafe/gossamer
        ref: b929e565c965133e3eb9b66bf31012401f4a78af
    - name: Cache go modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: go-mod-implementation-gossamer-${{ hashFiles('go.sum') }}
        restore-keys: go-mod-implementation-gossamer-
    - name: Build gossamer
      run: make gossamer
    - name: Upload gossamer
      uses: actions/upload-artifact@v1
      with:
        name: gossamer
        path: bin/gossamer


  build-adapter-substrate:
    name: "[build] substrate-adapter"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup rust toolchain
      id: rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-04-15
        target: wasm32-unknown-unknown
        default: true
        profile: minimal
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: cargo-registry-adapter-substrate-${{ hashFiles('test/adapters/substrate/Cargo.lock') }}
        restore-keys: cargo-registry-adapter-substrate-
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: cargo-index-adapter-substrate-${{ hashFiles('test/adapters/substrate/Cargo.lock') }}
        restore-keys: cargo-index-adapter-substrate-
    - name: Cache cargo build ouput
      uses: actions/cache@v1
      with:
        path: test/adapters/substrate/target
        key: cargo-build-adapter-substrate-${{ steps.rustup.outputs.rustc_hash }}-${{ hashFiles('test/adapters/substrate/Cargo.lock') }}
        restore-keys: cargo-build-adapter-substrate-${{ steps.rustup.outputs.rustc_hash }}-
    - name: Build substrate adapters
      working-directory: test/adapters/substrate
      run: make
    - name: Upload substrate adapter
      uses: actions/upload-artifact@v1
      with:
        name: substrate-adapter
        path: test/adapters/substrate/target/release/substrate-adapter


  build-tester-host:
    name: "[build] host-tester"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup rust toolchain
      id: rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-04-15
        target: wasm32-unknown-unknown
        default: true
        profile: minimal
    - name: Setup python toolchain
      uses: actions/setup-python@v2
    - name: Install yq
      run: |
        python -m pip install wheel
        python -m pip install yq
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: cargo-registry-tester-host-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-keys: cargo-registry-tester-host-
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: cargo-index-tester-host-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-keys: cargo-index-tester-host-
    - name: Cache cargo build output
      uses: actions/cache@v1
      with:
        path: test/testers/host/target
        key: cargo-build-tester-host-${{ steps.rustup.outputs.rustc_hash }}-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-keys: cargo-build-tester-host-${{ steps.rustup.outputs.rustc_hash }}-
    - name: Build and generate host tester genesis
      working-directory: test/testers/host
      run: make
    - name: Upload host tester runtime
      uses: actions/upload-artifact@v1
      with:
        name: host_tester_runtime.compact.wasm
        path: test/testers/host/target/release/wbuild/host-tester-runtime/host_tester_runtime.compact.wasm
    - name: Upload host tester genesis file
      uses: actions/upload-artifact@v1
      with:
        name: genesis.json
        path: test/testers/host/genesis.json
    - name: Upload host tester state file
      uses: actions/upload-artifact@v1
      with:
        name: genesis.yaml
        path: test/testers/host/genesis.yaml


  build-tester-host-legacy:
    name: "[build] host-tester-legacy"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup rust toolchain
      id: rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-04-15
        target: wasm32-unknown-unknown
        default: true
        profile: minimal
    - name: Setup python toolchain
      uses: actions/setup-python@v2
    - name: Install yq
      run: |
        python -m pip install wheel
        python -m pip install yq
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: cargo-registry-tester-host-legacy-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-keys: cargo-registry-tester-host-legacy-
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: cargo-index-tester-host-legacy-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-keys: cargo-index-tester-host-legacy-
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: test/testers/host-legacy/target
        key: cargo-build-tester-host-legacy-${{ steps.rustup.outputs.rustc_hash }}-${{ hashFiles('test/testers/host/Cargo.lock') }}
        restore-keys: cargo-build-tester-host-legacy-${{ steps.rustup.outputs.rustc_hash }}-
    - name: Build and generate host tester legacy genesis
      working-directory: test/testers/host-legacy
      run: make
    - name: Upload host tester legacy runtime
      uses: actions/upload-artifact@v1
      with:
        name: host_tester_legacy_runtime.compact.wasm
        path: test/testers/host-legacy/target/release/wbuild/host-tester-legacy-runtime/host_tester_legacy_runtime.compact.wasm
    - name: Upload host tester legacy genesis file
      uses: actions/upload-artifact@v1
      with:
        name: genesis-legacy.json
        path: test/testers/host-legacy/genesis-legacy.json
    - name: Upload host tester legacy state file
      uses: actions/upload-artifact@v1
      with:
        name: genesis-legacy.yaml
        path: test/testers/host-legacy/genesis-legacy.yaml
    - name: Upload host tester legacy genesis file for kagome
      uses: actions/upload-artifact@v1
      with:
        name: genesis-legacy.kagome.json
        path: test/testers/host-legacy/genesis-legacy.kagome.json


  test-substrate:
    needs: [ build-substrate, build-adapter-substrate, build-tester-host ]
    name: "[test-genesis] substrate"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: substrate
        path: test
    - run: chmod +x test/polkadot
    - uses: actions/download-artifact@v1
      with:
        name: substrate-adapter
        path: test/adapters/substrate
    - run: chmod +x test/adapters/substrate/substrate-adapter
    - uses: actions/download-artifact@v1
      with:
        name: genesis.json
        path: test/testers/host
    - uses: actions/download-artifact@v1
      with:
        name: genesis.yaml
        path: test/testers/host
    - name: Run substrate with tester genesis
      run: test/runtests.jl substrate genesis

  test-kagome:
    needs: [ build-kagome, build-adapter-substrate, build-tester-host-legacy ]
    name: "[test-genesis] kagome"
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: kagome
        path: test
    - run: chmod +x test/kagome_full
    - uses: actions/download-artifact@v1
      with:
        name: substrate-adapter
        path: test/adapters/substrate
    - run: chmod +x test/adapters/substrate/substrate-adapter
    - uses: actions/download-artifact@v1
      with:
        name: genesis-legacy.kagome.json
        path: test/testers/host-legacy
    - uses: actions/download-artifact@v1
      with:
        name: genesis-legacy.yaml
        path: test/testers/host-legacy
    - name: Run kagome with tester genesis
      run: test/runtests.jl kagome genesis

  test-gossamer:
    needs: [ build-gossamer, build-adapter-substrate, build-tester-host-legacy ]
    name: "[test-genesis] gossamer"
    runs-on: ubuntu-18.04
    continue-on-error: true
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Provide libwasmer.so
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: go-mod-implementation-gossamer-
    - uses: actions/download-artifact@v1
      with:
        name: gossamer
        path: test
    - run: chmod +x test/gossamer
    - uses: actions/download-artifact@v1
      with:
        name: substrate-adapter
        path: test/adapters/substrate
    - run: chmod +x test/adapters/substrate/substrate-adapter
    - uses: actions/download-artifact@v1
      with:
        name: genesis-legacy.json
        path: test/testers/host-legacy
    - uses: actions/download-artifact@v1
      with:
        name: genesis-legacy.yaml
        path: test/testers/host-legacy
    - name: Run gossamer with tester genesis
      run: test/runtests.jl gossamer genesis
