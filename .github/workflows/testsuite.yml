name: Conformance Testsuite

on:
  push:
    paths:
    - '.github/workflows/testsuite.yml'
    - 'test/**'
    - '!test/fixtures/genesis/**'
    - '!test/helpers/ImplementationFixture.jl'
    - '!test/runtimes/tester/**'
    - '!test/hosts/**'
    - '!test/README.md'
  pull_request:
    paths:
    - '.github/workflows/testsuite.yml'
    - 'test/**'
    - '!test/fixtures/genesis/**'
    - '!test/helpers/ImplementationFixture.jl'
    - '!test/runtimes/tester/**'
    - '!test/hosts/**'
    - '!test/README.md'

jobs:
  build-adapter-substrate:
    name: "[build] substrate-adapter"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup rust toolchain
      id: rustup
      uses: actions-rs/toolchain@v1
      with:
        target: wasm32-unknown-unknown
        default: true
        profile: minimal
    - name: Cache cargo registry
      uses: actions/cache@v2.1.3
      with:
        path: ~/.cargo/registry
        key: cargo-registry-adapter-substrate-${{ hashFiles('test/adapters/substrate/Cargo.lock') }}
        restore-keys: cargo-registry-adapter-substrate-
    - name: Cache cargo index
      uses: actions/cache@v2.1.3
      with:
        path: ~/.cargo/git
        key: cargo-index-adapter-substrate-${{ hashFiles('test/adapters/substrate/Cargo.lock') }}
        restore-keys: cargo-index-adapter-substrate-
    - name: Cache cargo build ouput
      uses: actions/cache@v2.1.3
      with:
        path: test/adapters/substrate/target
        key: cargo-build-adapter-substrate-${{ steps.rustup.outputs.rustc_hash }}-${{ hashFiles('test/adapters/substrate/Cargo.lock') }}
        restore-keys: cargo-build-adapter-substrate-${{ steps.rustup.outputs.rustc_hash }}-
    - name: Build substrate adapters
      run: make -C test substrate-adapter
    - name: Upload substrate adapter
      uses: actions/upload-artifact@v1
      with:
        name: substrate-adapter
        path: test/bin/substrate-adapter

  build-adapter-kagome:
    name: "[build] kagome-adapter"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Cache hunter packages
      uses: actions/cache@v2.1.3
      with:
        path: ~/.hunter
        key: hunter-adapter-kagome-${{ hashFiles('test/adapters/kagome/CMakeLists.txt') }}
        restore-keys: hunter-adapter-kagome-
    - name: Build kagome adapter
      env:
        CC: gcc-9
        CXX: g++-9
      run: make -C test kagome-adapter 
    - name: Upload kagome adapter
      uses: actions/upload-artifact@v1
      with:
        name: kagome-adapter
        path: test/bin/kagome-adapter

  build-adapter-gossamer:
    name: "[build] gossamer-adapter"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Cache go modules
      uses: actions/cache@v2.1.3
      with:
        path: ~/go/pkg/mod
        key: go-mod-adapter-gossamer-${{ hashFiles('test/adapters/gossamer/go.sum') }}
        restore-keys: go-mod-adapter-gossamer-
    - name: Build gossamer adapter
      run: make -C test gossamer-adapter 
    - name: Upload gossamer adapter
      uses: actions/upload-artifact@v2
      with:
        name: gossamer-adapter
        path: test/bin/gossamer-adapter
    - name: Upload libwasmer.so
      uses: actions/upload-artifact@v2
      with:
        name: gossamer-adapter
        path: test/lib/libwasmer.so


  build-runtime-hostapi:
    name: "[build] hostapi-runtime"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup rust toolchain
      id: rustup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2020-04-15
        override: true
        target: wasm32-unknown-unknown
        default: true
        profile: minimal
    - name: Cache cargo registry
      uses: actions/cache@v2.1.3
      with:
        path: ~/.cargo/registry
        key: cargo-registry-runtime-hostapi-${{ hashFiles('test/runtimes/hostapi/Cargo.lock') }}
        restore-keys: cargo-registry-runtime-hostapi-
    - name: Cache cargo index
      uses: actions/cache@v2.1.3
      with:
        path: ~/.cargo/git
        key: cargo-index-runtime-hostapi-${{ hashFiles('test/runtimes/hostapi/Cargo.lock') }}
        restore-keys: cargo-index-runtime-hostapi-
    - name: Cache cargo build ouput
      uses: actions/cache@v2.1.3
      with:
        path: test/runtimes/hostapi/target
        key: cargo-build-runtime-hostapi-${{ steps.rustup.outputs.rustc_hash }}-${{ hashFiles('test/runtimes/hostapi/Cargo.lock') }}
        restore-keys: cargo-build-runtime-hostapi-${{ steps.rustup.outputs.rustc_hash }}-
    - name: Build hostapi runtime
      run: make -C test hostapi-runtime
    - name: Upload hostapi runtime
      uses: actions/upload-artifact@v1
      with:
        name: hostapi-runtime.compact.wasm
        path: test/bin/hostapi_runtime.compact.wasm


  test-substrate:
    needs: build-adapter-substrate
    strategy:
      fail-fast: false
      matrix:
        fixture: [ host-api, scale-codec, state-trie ]
    name: "[test-${{ matrix.fixture }}] substrate"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: substrate-adapter
        path: test/bin
    - run: chmod +x test/bin/substrate-adapter
    - name: Run test fixture
      run: test/runtests.jl substrate ${{ matrix.fixture }}


  test-kagome:
    needs: [ build-adapter-substrate, build-adapter-kagome ]
    strategy:
      fail-fast: false
      matrix:
        fixture: [ scale-codec, state-trie ]
    name: "[test-${{ matrix.fixture }}] kagome"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: substrate-adapter
        path: test/bin
    - uses: actions/download-artifact@v1
      with:
        name: kagome-adapter
        path: test/bin
    - run: cd test/bin && chmod +x substrate-adapter kagome-adapter
    - name: Run test fixture
      run: test/runtests.jl kagome ${{ matrix.fixture }}

  test-kagome-hostapi:
    needs: [ build-adapter-kagome, build-runtime-hostapi ]
    name: "[test-host-api] kagome"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: kagome-adapter
        path: test/bin
    - uses: actions/download-artifact@v1
      with:
        name: hostapi-runtime.compact.wasm
        path: test/bin
    - run: chmod +x test/bin/kagome-adapter
    - name: Run test fixture
      run: test/runtests.jl kagome host-api


  test-gossamer:
    needs: [ build-adapter-substrate, build-adapter-gossamer ]
    strategy:
      fail-fast: false
      matrix:
        fixture: [ scale-codec, state-trie ]
    name: "[test-${{ matrix.fixture }}] gossamer"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: substrate-adapter
        path: test/bin
    - uses: actions/download-artifact@v1
      with:
        name: gossamer-adapter
        path: test/bin
    - run: |
        chmod +x test/bin/substrate-adapter test/bin/gossamer-adapter
        mkdir -p test/lib
        mv test/bin/libwasmer.so test/lib/
    - name: Run test fixture
      run: test/runtests.jl gossamer ${{ matrix.fixture }}

  test-gossamer-hostapi:
    needs: [ build-adapter-gossamer, build-runtime-hostapi]
    name: "[test-host-api] gossamer"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: gossamer-adapter
        path: test/bin
    - uses: actions/download-artifact@v1
      with:
        name: hostapi-runtime.compact.wasm
        path: test/bin
    - run: |
        chmod +x test/bin/gossamer-adapter
        mkdir -p test/lib
        mv test/bin/libwasmer.so test/lib/
    - name: Run test fixture
      run: test/runtests.jl gossamer host-api
